[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

#Debuff functionality
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if should_debuff ~= self.debuff then"
position = "before"
payload = "if self.debuff_prevent_this_round == G.GAME.round then should_debuff = false end"
match_indent = true

# Mamoswine Stone Card Suit (get_flush)
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if SMODS.has_no_suit(self) then"
position = "before"
payload = '''
local mamoswines = find_joker('mamoswine')
if #mamoswines > 0 and SMODS.has_enhancement(self, 'm_stone') then
    local mamoswine_card = mamoswines[1].ability.extra.card
    if mamoswine_card.suit == suit then
        return true
    elseif next(find_joker('Smeared Joker')) and (mamoswine_card.suit == 'Hearts' or mamoswine_card.suit == 'Diamonds') == (suit == 'Hearts' or suit == 'Diamonds') then
        return true
    end
end
'''
match_indent = true

# Mamoswine Stone Card Ranks Pt 1 (get_nominal)
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if self.ability.effect == 'Stone Card' or (self.config.center.no_suit and self.config.center.no_rank) then"
position = "after"
payload = '''
    local mamoswines = find_joker('mamoswine')
    if #mamoswines > 0 and self.ability.effect == 'Stone Card' then
        local mamoswine_card = mamoswines[1].ability.extra.card
        local smod_rank = SMODS.Ranks[mamoswine_card.value]
        local smod_suit = SMODS.Suits[mamoswine_card.suit]
        return 10*smod_rank.nominal*rank_mult + smod_suit.suit_nominal*mult + (self.base.suit_nominal_original or 0)*0.0001*mult + 10*(smod_rank.face_nominal or 0)*rank_mult + 0.000001*self.unique_val
    end
'''
match_indent = true

# Mamoswine Stone Card Ranks Pt 2 (get_id)
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "function Card:get_id()"
position = "after"
payload = '''
    local mamoswines = find_joker('mamoswine')
    if #mamoswines > 0 and self.ability.effect == 'Stone Card' then
        local mamoswine_card = mamoswines[1].ability.extra.card
        return SMODS.Ranks[mamoswine_card.value].id
    end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
if self.ability.perishable and self.ability.perish_tally <= 0 then 
    if not self.debuff then
        self.debuff = true
        if self.area == G.jokers then self:remove_from_deck(true) end
    end
    return
end
'''
position = "after"
payload = '''
if next(find_joker("mamoswine")) and self.ability.name == "Stone Card" then should_debuff = false end
'''
match_indent = true


# Unown Functionality

[[patches]]
[patches.pattern]
target = '=[SMODS _ "src/overrides.lua"]'
pattern = '''
if SUITS[v.base.suit][v.base.value] then
    table.insert(SUITS[v.base.suit][v.base.value], v)
end
rank_counts[v.base.value] = (rank_counts[v.base.value] or 0) + 1
'''
position = "at"
payload = '''
if v.base.suit == 'poke_Unown' then
    table.insert(SUITS['poke_Unown']['poke_UZ?'], v)
    rank_counts['poke_UZ?'] = (rank_counts['poke_UZ?'] or 0) + 1
else
    if SUITS[v.base.suit][v.base.value] then
        table.insert(SUITS[v.base.suit][v.base.value], v)
    end
    rank_counts[v.base.value] = (rank_counts[v.base.value] or 0) + 1
end
'''
match_indent = true
overwrite = true


[[patches]]
[patches.pattern]
target = '=[SMODS _ "src/overrides.lua"]'
pattern = "local mod_ace_tally = 0"
position = "after"
payload = '''
local unown_tally = 0
'''
match_indent = true


[[patches]]
[patches.pattern]
target = '=[SMODS _ "src/overrides.lua"]'
pattern = "if v.base.value and not SMODS.Ranks[v.base.value].face and card_id ~= 14 then"
position = "at"
payload = '''
if v.base.suit == 'poke_Unown' then
    unown_tally = unown_tally + 1
elseif v.base.value and not SMODS.Ranks[v.base.value].face and card_id ~= 14 then
'''
match_indent = true
overwrite = true

[[patches]]
[patches.pattern]
target = '=[SMODS _ "src/overrides.lua"]'
pattern = '''
if v.base.value then rank_tallies[v.base.value] = rank_tallies[v.base.value] + 1 end
if v.base.value and not v.debuff then mod_rank_tallies[v.base.value] = mod_rank_tallies[v.base.value] + 1 end
'''
position = "at"
payload = '''
if v.base.suit == 'poke_Unown' then rank_tallies['poke_UZ?'] = rank_tallies['poke_UZ?'] + 1
elseif v.base.value then rank_tallies[v.base.value] = rank_tallies[v.base.value] + 1 end
if v.base.suit == 'poke_Unown' and not v.debuff then mod_rank_tallies['poke_UZ?'] = mod_rank_tallies['poke_UZ?'] + 1
elseif v.base.value and not v.debuff then mod_rank_tallies[v.base.value] = mod_rank_tallies[v.base.value] + 1 end
'''
match_indent = true
overwrite = true

[[patches]]
[patches.pattern]
target = '=[SMODS _ "src/overrides.lua"]'
pattern = "if v.id == id then table.insert(ranks[k], card); break end"
position = "at"
payload = "if v.id == id and v.key == card.base.value then table.insert(ranks[k], card); break end"
match_indent = true
overwrite = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "-- TARGET: main scoring on played cards"
position = "after"
payload = '''
if card.base and card.base.suit == 'poke_Unown' then
    ret.unown_effect = calculate_Unown_playing_card(card, context)
end
'''
match_indent = true


[[patches]]
[patches.pattern]
target = '=[SMODS _ "src/utils.lua"]'
pattern = "if (G.P_SEALS[card.seal or {}] or {}).always_scores then return true end"
position = "after"
payload = "if card.base and card.base.suit == 'poke_Unown' then return true end"
match_indent = true


[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "function Card:add_to_deck(from_debuff)"
position = "after"
payload = "if self.base and self.base.suit == 'poke_Unown' then G.GAME.Unown = true end"
match_indent = true

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "local _r, _s = SMODS.Ranks[v.value].card_key, SMODS.Suits[v.suit].card_key"
position = "after"
payload = "if self.GAME.starting_params.unown_cards then _r, _s = unown_convert_to_unown(_r, _s) end"
match_indent = true

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "if self.GAME.starting_params.no_faces and SMODS.Ranks[v.value].face then keep = false end"
position = "at"
payload = '''
if self.GAME.starting_params.unown_cards and self.GAME.starting_params.no_faces then keep = keep and _r ~= 'poke_UJ' and _r ~= 'poke_UQ' and _r ~= 'poke_UK'
elseif self.GAME.starting_params.no_faces and SMODS.Ranks[v.value].face then keep = false end
'''
match_indent = true

